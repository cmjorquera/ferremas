# FERREMAS üõ†Ô∏è

**Proyecto acad√©mico para el ramo de Integraci√≥n de Proyectos**  
**Carrera: Ingenier√≠a en Inform√°tica ‚Äî 7¬∞ semestre ‚Äî A√±o 2025**

## Descripci√≥n

Este proyecto corresponde al ramo Integraci√≥n de Proyectos de la carrera de Ingenier√≠a en Inform√°tica, cursado en el s√©ptimo semestre del a√±o 2025.

El sistema FERREMAS ha sido desarrollado utilizando una arquitectura en capas, lo que permite una separaci√≥n clara de responsabilidades y facilita el mantenimiento, escalabilidad y reutilizaci√≥n del c√≥digo. Las capas est√°n organizadas de la siguiente manera:

- **Capa de Presentaci√≥n:** contiene las vistas, formularios y archivos est√°ticos (ubicados en `views/`, `forms/` y `assets/`). Es la encargada de la interfaz con el usuario.
- **Capa de L√≥gica de Negocio:** centraliza el flujo y reglas del sistema (en `app/`, `routes/` y `logs/`), incluyendo los controladores que orquestan los procesos.
- **Capa de Acceso a Datos:** gestiona la conexi√≥n y operaciones sobre la base de datos (en `conf/` y `database/`).
- **Capa de Servicios/API:** alojada en la carpeta `api/`, contiene la l√≥gica expuesta a trav√©s de endpoints para permitir la comunicaci√≥n con sistemas externos.
- **Capa de Dependencias:** el directorio `vendor/` incluye las librer√≠as instaladas por Composer, como el SDK de Transbank.
- **Capa de Pruebas:** el sistema contempla scripts y configuraciones para pruebas funcionales en `test/`.

Esta estructura modular asegura un desarrollo limpio y adaptable, cumpliendo con los requerimientos del ramo y buenas pr√°cticas de dise√±o de software.
----------------------------------------------------------------------------------------------------------------

## Funcionalidades destacadas

- üîê Integraci√≥n con Webpay Plus para pagos reales o de prueba.
- üåê Consumo de la API del Banco Central de Chile para visualizar indicadores econ√≥micos (d√≥lar, euro, UF, UTM).
- üìä Icono adicional en el encabezado del sistema que permite abrir un modal y ver en tiempo real los valores actualizados de los indicadores econ√≥micos desde cualquier vista.
- üß© Modularidad a trav√©s de componentes reutilizables (`app/componentes/header.php`, `footer.php`, etc.).
----------------------------------------------------------------------------------------------------------------

## Recursos utilizados

- **Lenguaje de programaci√≥n:** PHP 8
- **Base de datos:** MySQL
- **Framework:** Bootstrap 5 (frontend), Composer (PHP dependencias)
- **Integraciones externas:**
  - Webpay Plus (Transbank SDK)
  - API del Banco Central de Chile
----------------------------------------------------------------------------------------------------------------

## Arquitectura

El sistema est√° dise√±ado bajo una **arquitectura en capas** que incluye:

- **Capa de presentaci√≥n:** HTML, CSS (Bootstrap), JS
- **Capa l√≥gica (backend):** PHP puro con estructuras MVC simples
- **Capa de datos:** MySQL
- **API REST propia** para orquestar peticiones entre frontend, base de datos y servicios externos
----------------------------------------------------------------------------------------------------------------

## üîß Requisitos para ejecutarlo

1. **Servidor local o remoto con:**
   - PHP 8.x
   - MySQL 5.7 o superior
   - Composer instalado

2. **Instalaci√≥n de dependencias:** 
   composer install

